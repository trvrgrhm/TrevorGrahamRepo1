# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'windows-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- task: SonarCloudPrepare@1
  displayName: 'preparing sonar cloud'
  inputs:
    SonarCloud: 'sonarcloud-connection'
    organization: 'trvrgrhm'
    scannerMode: 'MSBuild'
    projectKey: 'trvrgrhm_StoreAppPractice'
    projectName: 'StoreAppPractice'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: DotNetCoreCLI@2
  displayName: 'building project'
  inputs:
    command: 'build'
    projects: './P0_TrevorGraham/StoreApplication/StoreApplication.sln'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: SonarCloudAnalyze@1
  displayName: 'analyzing sonar cloud'
- task: SonarCloudPublish@1
  displayName: 'publishing sonar cloud'
  inputs:
    pollingTimeoutSec: '300'

- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'drop'
    downloadPath: '$(System.ArtifactsDirectory)'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Trevor Subscription(d4f01992-52b9-4047-8f7d-34d2e08c6987)'
    appType: 'webApp'
    WebAppName: 'StoreApplication'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'


